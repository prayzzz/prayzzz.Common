# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

pool:
  vmImage: 'Ubuntu 16.04'

variables:
  BuildConfiguration: Release
  Major: '1'
  Minor: '0'
  Patch: '0'
  BuildVersion: $(Major).$(Minor).$(Patch)-CI-$(Date:yyyyMMdd)-$(Build.SourceBranchName)

name: $(BuildVersion)
  
steps:
- task: DotNetCoreCLI@2
  inputs:
    command: build
    projects: '**/*.csproj'
    arguments: --configuration $(BuildConfiguration)

- task: DotNetCoreCLI@2
  inputs:
    command: test
    projects: '**/*.Test.csproj'
    arguments: --configuration $(BuildConfiguration)
    
- task: DotNetCoreCLI@2
  condition: not(eq(variables['Build.Reason'], 'PullRequest'))
  inputs:
    command: pack
    packagesToPack: '**/*.csproj;-:**/*.Test.csproj'
    versioningScheme: byEnvVar
    versionEnvVar: BuildVersion

- task: DotNetCoreCLI@2
  condition: and(not(failed()), not(eq(variables['Build.Reason'], 'PullRequest')))
  inputs:
    command: push
    publishVstsFeed: nupkg
